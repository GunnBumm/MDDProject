/*
* generated by Xtext
*/
package mddProject.concreteSyntax.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import mddProject.concreteSyntax.services.JDSLGrammarAccess;

public class JDSLParser extends AbstractContentAssistParser {
	
	@Inject
	private JDSLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected mddProject.concreteSyntax.ui.contentassist.antlr.internal.InternalJDSLParser createParser() {
		mddProject.concreteSyntax.ui.contentassist.antlr.internal.InternalJDSLParser result = new mddProject.concreteSyntax.ui.contentassist.antlr.internal.InternalJDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getNamedElementAccess().getAlternatives(), "rule__NamedElement__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
					put(grammarAccess.getTypeEnumAccess().getAlternatives(), "rule__TypeEnum__Alternatives");
					put(grammarAccess.getCMSEnumAccess().getAlternatives(), "rule__CMSEnum__Alternatives");
					put(grammarAccess.getAccessLevelEnumAccess().getAlternatives(), "rule__AccessLevelEnum__Alternatives");
					put(grammarAccess.getContentModelAccess().getGroup(), "rule__ContentModel__Group__0");
					put(grammarAccess.getContentModelAccess().getGroup_6(), "rule__ContentModel__Group_6__0");
					put(grammarAccess.getContentModelAccess().getGroup_6_3(), "rule__ContentModel__Group_6_3__0");
					put(grammarAccess.getContentTypeAccess().getGroup(), "rule__ContentType__Group__0");
					put(grammarAccess.getContentTypeAccess().getGroup_9(), "rule__ContentType__Group_9__0");
					put(grammarAccess.getContentTypeAccess().getGroup_12(), "rule__ContentType__Group_12__0");
					put(grammarAccess.getContentTypeAccess().getGroup_13(), "rule__ContentType__Group_13__0");
					put(grammarAccess.getContentTypeAccess().getGroup_13_3(), "rule__ContentType__Group_13_3__0");
					put(grammarAccess.getContentTypeAccess().getGroup_14(), "rule__ContentType__Group_14__0");
					put(grammarAccess.getPropertyAccess().getGroup(), "rule__Property__Group__0");
					put(grammarAccess.getRoleAccess().getGroup(), "rule__Role__Group__0");
					put(grammarAccess.getRoleAccess().getGroup_7(), "rule__Role__Group_7__0");
					put(grammarAccess.getRoleAccess().getGroup_7_3(), "rule__Role__Group_7_3__0");
					put(grammarAccess.getUserAccess().getGroup(), "rule__User__Group__0");
					put(grammarAccess.getUserAccess().getGroup_7(), "rule__User__Group_7__0");
					put(grammarAccess.getUserAccess().getGroup_8(), "rule__User__Group_8__0");
					put(grammarAccess.getUserAccess().getGroup_9(), "rule__User__Group_9__0");
					put(grammarAccess.getUserAccess().getGroup_10(), "rule__User__Group_10__0");
					put(grammarAccess.getUserAccess().getGroup_11(), "rule__User__Group_11__0");
					put(grammarAccess.getUserAccess().getGroup_12(), "rule__User__Group_12__0");
					put(grammarAccess.getVersionAccess().getGroup(), "rule__Version__Group__0");
					put(grammarAccess.getCMSAccess().getGroup(), "rule__CMS__Group__0");
					put(grammarAccess.getCMSAccess().getGroup_6(), "rule__CMS__Group_6__0");
					put(grammarAccess.getCMSAccess().getGroup_7(), "rule__CMS__Group_7__0");
					put(grammarAccess.getCMSAccess().getGroup_8(), "rule__CMS__Group_8__0");
					put(grammarAccess.getCMSAccess().getGroup_9(), "rule__CMS__Group_9__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getContentModelAccess().getNameAssignment_5(), "rule__ContentModel__NameAssignment_5");
					put(grammarAccess.getContentModelAccess().getHasElementsAssignment_6_2(), "rule__ContentModel__HasElementsAssignment_6_2");
					put(grammarAccess.getContentModelAccess().getHasElementsAssignment_6_3_1(), "rule__ContentModel__HasElementsAssignment_6_3_1");
					put(grammarAccess.getContentTypeAccess().getVisibleAssignment_0(), "rule__ContentType__VisibleAssignment_0");
					put(grammarAccess.getContentTypeAccess().getNameAssignment_5(), "rule__ContentType__NameAssignment_5");
					put(grammarAccess.getContentTypeAccess().getHasPropertiesAssignment_8(), "rule__ContentType__HasPropertiesAssignment_8");
					put(grammarAccess.getContentTypeAccess().getHasPropertiesAssignment_9_1(), "rule__ContentType__HasPropertiesAssignment_9_1");
					put(grammarAccess.getContentTypeAccess().getGuidAssignment_12_2(), "rule__ContentType__GuidAssignment_12_2");
					put(grammarAccess.getContentTypeAccess().getHasVersionsAssignment_13_2(), "rule__ContentType__HasVersionsAssignment_13_2");
					put(grammarAccess.getContentTypeAccess().getHasVersionsAssignment_13_3_1(), "rule__ContentType__HasVersionsAssignment_13_3_1");
					put(grammarAccess.getContentTypeAccess().getModifiedByAssignment_14_2(), "rule__ContentType__ModifiedByAssignment_14_2");
					put(grammarAccess.getPropertyAccess().getNameAssignment_4(), "rule__Property__NameAssignment_4");
					put(grammarAccess.getPropertyAccess().getAccessModiferAssignment_7(), "rule__Property__AccessModiferAssignment_7");
					put(grammarAccess.getPropertyAccess().getTypeAssignment_10(), "rule__Property__TypeAssignment_10");
					put(grammarAccess.getRoleAccess().getIsAdminAssignment_1(), "rule__Role__IsAdminAssignment_1");
					put(grammarAccess.getRoleAccess().getNameAssignment_6(), "rule__Role__NameAssignment_6");
					put(grammarAccess.getRoleAccess().getTypesAssignment_7_2(), "rule__Role__TypesAssignment_7_2");
					put(grammarAccess.getRoleAccess().getTypesAssignment_7_3_1(), "rule__Role__TypesAssignment_7_3_1");
					put(grammarAccess.getUserAccess().getDisabledAssignment_1(), "rule__User__DisabledAssignment_1");
					put(grammarAccess.getUserAccess().getNameAssignment_6(), "rule__User__NameAssignment_6");
					put(grammarAccess.getUserAccess().getFirstnameAssignment_7_2(), "rule__User__FirstnameAssignment_7_2");
					put(grammarAccess.getUserAccess().getLastnameAssignment_8_2(), "rule__User__LastnameAssignment_8_2");
					put(grammarAccess.getUserAccess().getLoginAssignment_9_2(), "rule__User__LoginAssignment_9_2");
					put(grammarAccess.getUserAccess().getPasswordAssignment_10_2(), "rule__User__PasswordAssignment_10_2");
					put(grammarAccess.getUserAccess().getEmailAssignment_11_2(), "rule__User__EmailAssignment_11_2");
					put(grammarAccess.getUserAccess().getHasRoleAssignment_12_2(), "rule__User__HasRoleAssignment_12_2");
					put(grammarAccess.getVersionAccess().getNameAssignment_4(), "rule__Version__NameAssignment_4");
					put(grammarAccess.getCMSAccess().getNameAssignment_5(), "rule__CMS__NameAssignment_5");
					put(grammarAccess.getCMSAccess().getTypeAssignment_6_2(), "rule__CMS__TypeAssignment_6_2");
					put(grammarAccess.getCMSAccess().getAddress_urlAssignment_7_2(), "rule__CMS__Address_urlAssignment_7_2");
					put(grammarAccess.getCMSAccess().getUsernameAssignment_8_2(), "rule__CMS__UsernameAssignment_8_2");
					put(grammarAccess.getCMSAccess().getPasswordAssignment_9_2(), "rule__CMS__PasswordAssignment_9_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			mddProject.concreteSyntax.ui.contentassist.antlr.internal.InternalJDSLParser typedParser = (mddProject.concreteSyntax.ui.contentassist.antlr.internal.InternalJDSLParser) parser;
			typedParser.entryRuleContentModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public JDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(JDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
