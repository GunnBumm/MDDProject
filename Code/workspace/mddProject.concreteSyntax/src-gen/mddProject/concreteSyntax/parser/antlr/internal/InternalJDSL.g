/*
* generated by Xtext
*/
grammar InternalJDSL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package mddProject.concreteSyntax.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package mddProject.concreteSyntax.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import mddProject.concreteSyntax.services.JDSLGrammarAccess;

}

@parser::members {

 	private JDSLGrammarAccess grammarAccess;
 	
    public InternalJDSLParser(TokenStream input, JDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "ContentModel";	
   	}
   	
   	@Override
   	protected JDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleContentModel
entryRuleContentModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContentModelRule()); }
	 iv_ruleContentModel=ruleContentModel 
	 { $current=$iv_ruleContentModel.current; } 
	 EOF 
;

// Rule ContentModel
ruleContentModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getContentModelAccess().getContentModelAction_0(),
            $current);
    }
)	otherlv_1='ContentModel' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getContentModelAccess().getContentModelKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getContentModelAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='Name' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getContentModelAccess().getNameKeyword_3());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getContentModelAccess().getEqualsSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContentModelAccess().getNameEStringParserRuleCall_5_0()); 
	    }
		lv_name_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContentModelRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='Contains' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getContentModelAccess().getContainsKeyword_6_0());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getContentModelAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContentModelAccess().getHasElementsNamedElementParserRuleCall_6_2_0()); 
	    }
		lv_hasElements_8_0=ruleNamedElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContentModelRule());
	        }
       		add(
       			$current, 
       			"hasElements",
        		lv_hasElements_8_0, 
        		"NamedElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getContentModelAccess().getSemicolonKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContentModelAccess().getHasElementsNamedElementParserRuleCall_6_3_1_0()); 
	    }
		lv_hasElements_10_0=ruleNamedElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContentModelRule());
	        }
       		add(
       			$current, 
       			"hasElements",
        		lv_hasElements_10_0, 
        		"NamedElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getContentModelAccess().getSemicolonKeyword_6_4());
    }
	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getContentModelAccess().getRightCurlyBracketKeyword_6_5());
    }
)?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getContentModelAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleNamedElement
entryRuleNamedElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedElementRule()); }
	 iv_ruleNamedElement=ruleNamedElement 
	 { $current=$iv_ruleNamedElement.current; } 
	 EOF 
;

// Rule NamedElement
ruleNamedElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNamedElementAccess().getContentTypeParserRuleCall_0()); 
    }
    this_ContentType_0=ruleContentType
    { 
        $current = $this_ContentType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedElementAccess().getCMSParserRuleCall_1()); 
    }
    this_CMS_1=ruleCMS
    { 
        $current = $this_CMS_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleContentType
entryRuleContentType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContentTypeRule()); }
	 iv_ruleContentType=ruleContentType 
	 { $current=$iv_ruleContentType.current; } 
	 EOF 
;

// Rule ContentType
ruleContentType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_visible_0_0=	'visible' 
    {
        newLeafNode(lv_visible_0_0, grammarAccess.getContentTypeAccess().getVisibleVisibleKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContentTypeRule());
	        }
       		setWithLastConsumed($current, "visible", true, "visible");
	    }

)
)?	otherlv_1='ContentType' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getContentTypeAccess().getContentTypeKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getContentTypeAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='Name' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getContentTypeAccess().getNameKeyword_3());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getContentTypeAccess().getEqualsSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContentTypeAccess().getNameEStringParserRuleCall_5_0()); 
	    }
		lv_name_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContentTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='Properties' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getContentTypeAccess().getPropertiesKeyword_6());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getContentTypeAccess().getLeftCurlyBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContentTypeAccess().getHasPropertiesPropertyParserRuleCall_8_0()); 
	    }
		lv_hasProperties_8_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContentTypeRule());
	        }
       		add(
       			$current, 
       			"hasProperties",
        		lv_hasProperties_8_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getContentTypeAccess().getSemicolonKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContentTypeAccess().getHasPropertiesPropertyParserRuleCall_9_1_0()); 
	    }
		lv_hasProperties_10_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContentTypeRule());
	        }
       		add(
       			$current, 
       			"hasProperties",
        		lv_hasProperties_10_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getContentTypeAccess().getSemicolonKeyword_10());
    }
	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getContentTypeAccess().getRightCurlyBracketKeyword_11());
    }
(	otherlv_13='Guid' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getContentTypeAccess().getGuidKeyword_12_0());
    }
	otherlv_14='=' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getContentTypeAccess().getEqualsSignKeyword_12_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContentTypeAccess().getGuidEIntParserRuleCall_12_2_0()); 
	    }
		lv_guid_15_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContentTypeRule());
	        }
       		set(
       			$current, 
       			"guid",
        		lv_guid_15_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_16='Versions' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getContentTypeAccess().getVersionsKeyword_13_0());
    }
	otherlv_17='{' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getContentTypeAccess().getLeftCurlyBracketKeyword_13_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContentTypeAccess().getHasVersionsVersionParserRuleCall_13_2_0()); 
	    }
		lv_hasVersions_18_0=ruleVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContentTypeRule());
	        }
       		add(
       			$current, 
       			"hasVersions",
        		lv_hasVersions_18_0, 
        		"Version");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_19=';' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getContentTypeAccess().getSemicolonKeyword_13_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContentTypeAccess().getHasVersionsVersionParserRuleCall_13_3_1_0()); 
	    }
		lv_hasVersions_20_0=ruleVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContentTypeRule());
	        }
       		add(
       			$current, 
       			"hasVersions",
        		lv_hasVersions_20_0, 
        		"Version");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_21=';' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getContentTypeAccess().getSemicolonKeyword_13_4());
    }
	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getContentTypeAccess().getRightCurlyBracketKeyword_13_5());
    }
)?(	otherlv_23='ModifiedBy' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getContentTypeAccess().getModifiedByKeyword_14_0());
    }
	otherlv_24='=' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getContentTypeAccess().getEqualsSignKeyword_14_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContentTypeAccess().getModifiedByUserParserRuleCall_14_2_0()); 
	    }
		lv_modifiedBy_25_0=ruleUser		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContentTypeRule());
	        }
       		set(
       			$current, 
       			"modifiedBy",
        		lv_modifiedBy_25_0, 
        		"User");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getContentTypeAccess().getRightCurlyBracketKeyword_15());
    }
)
;





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Property' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPropertyAccess().getPropertyKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPropertyAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='Name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPropertyAccess().getNameKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPropertyAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getNameEStringParserRuleCall_4_0()); 
	    }
		lv_name_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='AccessModifier' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPropertyAccess().getAccessModifierKeyword_5());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPropertyAccess().getEqualsSignKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getAccessModiferAccessLevelEnumEnumRuleCall_7_0()); 
	    }
		lv_accessModifer_7_0=ruleAccessLevelEnum		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"accessModifer",
        		lv_accessModifer_7_0, 
        		"AccessLevelEnum");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='Type' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPropertyAccess().getTypeKeyword_8());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPropertyAccess().getEqualsSignKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getTypeTypeEnumEnumRuleCall_10_0()); 
	    }
		lv_type_10_0=ruleTypeEnum		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_10_0, 
        		"TypeEnum");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPropertyAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleRole
entryRuleRole returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRoleRule()); }
	 iv_ruleRole=ruleRole 
	 { $current=$iv_ruleRole.current; } 
	 EOF 
;

// Rule Role
ruleRole returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRoleAccess().getRoleAction_0(),
            $current);
    }
)(
(
		lv_isAdmin_1_0=	'isAdmin' 
    {
        newLeafNode(lv_isAdmin_1_0, grammarAccess.getRoleAccess().getIsAdminIsAdminKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRoleRule());
	        }
       		setWithLastConsumed($current, "isAdmin", true, "isAdmin");
	    }

)
)?	otherlv_2='Role' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRoleAccess().getRoleKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRoleAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_4='Name' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRoleAccess().getNameKeyword_4());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRoleAccess().getEqualsSignKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRoleAccess().getNameEStringParserRuleCall_6_0()); 
	    }
		lv_name_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoleRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='Types' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRoleAccess().getTypesKeyword_7_0());
    }
	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRoleAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRoleAccess().getTypesEStringParserRuleCall_7_2_0()); 
	    }
		lv_types_9_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoleRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_9_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=';' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRoleAccess().getSemicolonKeyword_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRoleAccess().getTypesEStringParserRuleCall_7_3_1_0()); 
	    }
		lv_types_11_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoleRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_11_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_12=';' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRoleAccess().getSemicolonKeyword_7_4());
    }
	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getRoleAccess().getRightCurlyBracketKeyword_7_5());
    }
)?	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getRoleAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleUser
entryRuleUser returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUserRule()); }
	 iv_ruleUser=ruleUser 
	 { $current=$iv_ruleUser.current; } 
	 EOF 
;

// Rule User
ruleUser returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUserAccess().getUserAction_0(),
            $current);
    }
)(
(
		lv_disabled_1_0=	'disabled' 
    {
        newLeafNode(lv_disabled_1_0, grammarAccess.getUserAccess().getDisabledDisabledKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUserRule());
	        }
       		setWithLastConsumed($current, "disabled", true, "disabled");
	    }

)
)?	otherlv_2='User' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUserAccess().getUserKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUserAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_4='Name' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUserAccess().getNameKeyword_4());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getUserAccess().getEqualsSignKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserAccess().getNameEStringParserRuleCall_6_0()); 
	    }
		lv_name_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='userFirstName' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUserAccess().getUserFirstNameKeyword_7_0());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUserAccess().getEqualsSignKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserAccess().getFirstnameEStringParserRuleCall_7_2_0()); 
	    }
		lv_firstname_9_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserRule());
	        }
       		set(
       			$current, 
       			"firstname",
        		lv_firstname_9_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='userLastName' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getUserAccess().getUserLastNameKeyword_8_0());
    }
	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getUserAccess().getEqualsSignKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserAccess().getLastnameEStringParserRuleCall_8_2_0()); 
	    }
		lv_lastname_12_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserRule());
	        }
       		set(
       			$current, 
       			"lastname",
        		lv_lastname_12_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_13='Login' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getUserAccess().getLoginKeyword_9_0());
    }
	otherlv_14='=' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getUserAccess().getEqualsSignKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserAccess().getLoginEStringParserRuleCall_9_2_0()); 
	    }
		lv_login_15_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserRule());
	        }
       		set(
       			$current, 
       			"login",
        		lv_login_15_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_16='Password' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getUserAccess().getPasswordKeyword_10_0());
    }
	otherlv_17='=' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getUserAccess().getEqualsSignKeyword_10_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserAccess().getPasswordEStringParserRuleCall_10_2_0()); 
	    }
		lv_password_18_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserRule());
	        }
       		set(
       			$current, 
       			"password",
        		lv_password_18_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_19='Email' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getUserAccess().getEmailKeyword_11_0());
    }
	otherlv_20='=' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getUserAccess().getEqualsSignKeyword_11_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserAccess().getEmailEStringParserRuleCall_11_2_0()); 
	    }
		lv_email_21_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserRule());
	        }
       		set(
       			$current, 
       			"email",
        		lv_email_21_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_22='Role' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getUserAccess().getRoleKeyword_12_0());
    }
	otherlv_23='=' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getUserAccess().getEqualsSignKeyword_12_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserAccess().getHasRoleRoleParserRuleCall_12_2_0()); 
	    }
		lv_hasRole_24_0=ruleRole		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserRule());
	        }
       		set(
       			$current, 
       			"hasRole",
        		lv_hasRole_24_0, 
        		"Role");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_25='}' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getUserAccess().getRightCurlyBracketKeyword_13());
    }
)
;





// Entry rule entryRuleVersion
entryRuleVersion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	 iv_ruleVersion=ruleVersion 
	 { $current=$iv_ruleVersion.current; } 
	 EOF 
;

// Rule Version
ruleVersion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVersionAccess().getVersionAction_0(),
            $current);
    }
)	otherlv_1='Version' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVersionAccess().getVersionKeyword_1());
    }
	otherlv_2='Number' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVersionAccess().getNumberKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVersionAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVersionAccess().getNameEStringParserRuleCall_4_0()); 
	    }
		lv_name_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVersionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCMS
entryRuleCMS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCMSRule()); }
	 iv_ruleCMS=ruleCMS 
	 { $current=$iv_ruleCMS.current; } 
	 EOF 
;

// Rule CMS
ruleCMS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCMSAccess().getCMSAction_0(),
            $current);
    }
)	otherlv_1='CMS' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCMSAccess().getCMSKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCMSAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='Name' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCMSAccess().getNameKeyword_3());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCMSAccess().getEqualsSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCMSAccess().getNameEStringParserRuleCall_5_0()); 
	    }
		lv_name_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCMSRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='Type' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCMSAccess().getTypeKeyword_6_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCMSAccess().getEqualsSignKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCMSAccess().getTypeCMSEnumEnumRuleCall_6_2_0()); 
	    }
		lv_type_8_0=ruleCMSEnum		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCMSRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_8_0, 
        		"CMSEnum");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_9='Address_url' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCMSAccess().getAddress_urlKeyword_7_0());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCMSAccess().getEqualsSignKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCMSAccess().getAddress_urlEStringParserRuleCall_7_2_0()); 
	    }
		lv_address_url_11_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCMSRule());
	        }
       		set(
       			$current, 
       			"address_url",
        		lv_address_url_11_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_12='Username' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCMSAccess().getUsernameKeyword_8_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getCMSAccess().getEqualsSignKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCMSAccess().getUsernameEStringParserRuleCall_8_2_0()); 
	    }
		lv_username_14_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCMSRule());
	        }
       		set(
       			$current, 
       			"username",
        		lv_username_14_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_15='Password' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getCMSAccess().getPasswordKeyword_9_0());
    }
	otherlv_16='=' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getCMSAccess().getEqualsSignKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCMSAccess().getPasswordEStringParserRuleCall_9_2_0()); 
	    }
		lv_password_17_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCMSRule());
	        }
       		set(
       			$current, 
       			"password",
        		lv_password_17_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getCMSAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;







// Rule TypeEnum
ruleTypeEnum returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='char' 
	{
        $current = grammarAccess.getTypeEnumAccess().getCharEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getTypeEnumAccess().getCharEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='byte' 
	{
        $current = grammarAccess.getTypeEnumAccess().getByteEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getTypeEnumAccess().getByteEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='string' 
	{
        $current = grammarAccess.getTypeEnumAccess().getStringEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getTypeEnumAccess().getStringEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='int' 
	{
        $current = grammarAccess.getTypeEnumAccess().getIntEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getTypeEnumAccess().getIntEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='float' 
	{
        $current = grammarAccess.getTypeEnumAccess().getFloatEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getTypeEnumAccess().getFloatEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='double' 
	{
        $current = grammarAccess.getTypeEnumAccess().getDoubleEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getTypeEnumAccess().getDoubleEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='boolean' 
	{
        $current = grammarAccess.getTypeEnumAccess().getBooleanEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getTypeEnumAccess().getBooleanEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='date' 
	{
        $current = grammarAccess.getTypeEnumAccess().getDateEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getTypeEnumAccess().getDateEnumLiteralDeclaration_7()); 
    }
));



// Rule CMSEnum
ruleCMSEnum returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Jease' 
	{
        $current = grammarAccess.getCMSEnumAccess().getJeaseEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getCMSEnumAccess().getJeaseEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='N2' 
	{
        $current = grammarAccess.getCMSEnumAccess().getN2EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getCMSEnumAccess().getN2EnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Concrete5' 
	{
        $current = grammarAccess.getCMSEnumAccess().getConcrete5EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getCMSEnumAccess().getConcrete5EnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Plone' 
	{
        $current = grammarAccess.getCMSEnumAccess().getPloneEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getCMSEnumAccess().getPloneEnumLiteralDeclaration_3()); 
    }
));



// Rule AccessLevelEnum
ruleAccessLevelEnum returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='public' 
	{
        $current = grammarAccess.getAccessLevelEnumAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAccessLevelEnumAccess().getPublicEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='private' 
	{
        $current = grammarAccess.getAccessLevelEnumAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAccessLevelEnumAccess().getPrivateEnumLiteralDeclaration_1()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


