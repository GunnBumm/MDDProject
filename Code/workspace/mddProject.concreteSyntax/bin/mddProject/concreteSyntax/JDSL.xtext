// automatically generated by Xtext
grammar mddProject.concreteSyntax.JDSL with org.eclipse.xtext.common.Terminals

import "platform:/resource/mddProject_AbstractSyntax/model/jdsl.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

ContentModel returns ContentModel:
	{ContentModel}
	'ContentModel'
	'{'
	    'Name' '=' name=EString
		('Contains' '{' hasElements+=NamedElement ( "," hasElements+=NamedElement)* '}' )?
	'}';

NamedElement returns NamedElement:
	ContentType  | CMS;

//ContentModel | ContentType | Property | SingleType | ArrayType | Role | User | Version | CMS | AccessLevel;


EString returns ecore::EString:
	STRING | ID;

ContentType returns ContentType:
	(visible?='visible')?
	'ContentType'
	'{'
	    'Name' '=' name=EString
		('guid' '=' guid=EInt)?
		'hasProperties' '{' hasProperties+=Property ( "," hasProperties+=Property)* '}' 
		('hasVersions' '{' hasVersions+=Version ( "," hasVersions+=Version)* '}' )?
		('modifiedBy' '=' modifiedBy=User)?
	'}';

Property returns Property:
	'Property'
	'{'
	    'Name' '=' name=EString
		'accessModifer' '=' accessModifer=AccessLevelEnum
		('Type' '=' type=TypeEnum)?
	'}';

Role returns Role:
	{Role}
	(isAdmin?='isAdmin')?
	'Role'
	'{'
	     'Name' '=' name=EString
		('types' '{' types+=EString ( "," types+=EString)* '}' )?
	'}';

User returns User:
	{User}
	(disabled?='disabled')?
	'User'
	'{'
	  'Name' '=' name=EString
		('firstname' '=' firstname=EString)?
		('lastname' '=' lastname=EString)?
		('login' '=' login=EString)?
		('password' '='  password=EString)?
		('email' '=' email=EString)?
		('Role' '=' hasRole=Role)?
	'}';

Version returns Version:
	{Version}
	'Version'
	'Number' '=' name=EString;

CMS returns CMS:
	{CMS}
	'CMS'
	'{'
	    'Name' '=' name=EString
		('type' '=' type=CMSEnum)
		('address_url''=' address_url=EString)
		('username' '=' username=EString)
		('password' '=' password=EString)
	'}';


EInt returns ecore::EInt:
	'-'? INT;

EBoolean returns ecore::EBoolean:
	'true' | 'false';


enum TypeEnum:
	char='char' | byte='byte' | string='string' | int='int' | float='float' | double='double' | boolean='boolean' | date='date'
;

enum CMSEnum:
		Jease='Jease' | N2 = 'N2' | Concrete5 = 'Concrete5' | Plone = 'Plone'
	;

enum AccessLevelEnum:
	public='public' | private='private'	
	;
